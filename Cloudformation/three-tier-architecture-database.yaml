AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for the Database Layer of a three-tier app.

Parameters:
  ProjectName:
    Description: Name of the project.
    Type: String

  VpcId:
    Description: The VPC ID from the networking stack.
    Type: String
    Default: !ImportValue 'three-tier-app-VPCID'

  DatabaseSubnetIds:
    Description: Comma-separated list of database subnet IDs.
    Type: CommaDelimitedList
    Default: !ImportValue 'three-tier-app-DatabaseSubnetIDs'

  RDSSecurityGroupId:
    Description: The RDS Security Group ID.
    Type: String
    Default: !ImportValue 'three-tier-app-RDSSecurityGroupID'

  DbAllocatedStorage:
    Description: The allocated storage in gigabytes for the DB instance.
    Type: Number
    Default: 20

  DbEngine:
    Description: The database engine (e.g., mysql).
    Type: String
    AllowedValues: [mysql, postgres, mariadb, oracle-se2, oracle-se, oracle-ee, sqlserver-ex, sqlserver-web, sqlserver-std, sqlserver-ent]
    Default: mysql

  DbEngineVersion:
    Description: The database engine version (e.g., 5.7, 8.0).
    Type: String
    Default: 8.0 # Adjust based on supported versions in your region

  DbInstanceClass:
    Description: The EC2 instance type for the database.
    Type: String
    Default: db.t3.micro # Adjust based on supported combinations

  DbName:
    Description: The name of the database.
    Type: String

  DbUsername:
    Description: The master username for the database.
    Type: String

  DbPassword:
    Description: The master password for the database.
    Type: String
    NoEcho: true # Hides value in console

  DbMultiAz:
    Description: Specifies if the RDS instance is deployed in a Multi-AZ configuration.
    Type: String
    AllowedValues: [true, false]
    Default: false

Resources:
  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS DB Subnet Group for three-tier app
      SubnetIds: !Ref DatabaseSubnetIds
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-db-subnet-group'

  # RDS DB Instance
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref DbAllocatedStorage
      DBInstanceClass: !Ref DbInstanceClass
      Engine: !Ref DbEngine
      EngineVersion: !Ref DbEngineVersion
      MasterUsername: !Ref DbUsername
      MasterUserPassword: !Ref DbPassword
      DBName: !Ref DbName
      VPCSecurityGroups:
        - !Ref RDSSecurityGroupId
      DBSubnetGroupName: !Ref DBSubnetGroup
      MultiAZ: !If [DbMultiAzCondition, true, false] # Use a condition for boolean
      PubliclyAccessible: false
      BackupRetentionPeriod: 7 # Keep backups for 7 days
      SkipFinalSnapshot: true # Set to false for production
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-rds-instance'
      # Adjust ParameterGroupName based on Engine and EngineVersion
      # Example for MySQL 8.0:
      ParameterGroupName: default.mysql8.0 # Adjust as per your chosen engine version

Conditions:
  DbMultiAzCondition: !Equals [!Ref DbMultiAz, "true"]

Outputs:
  DbEndpoint:
    Description: The endpoint of the RDS DB Instance.
    Value: !GetAtt DBInstance.Endpoint.Address
    Export:
      Name: !Sub '${ProjectName}-DBEndpoint'